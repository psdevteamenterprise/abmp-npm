export interface DataItem {
    /** Data item ID. */
    id?: string;
    /**
     * ID of the collection to which this item belongs.
     * @readonly
     */
    dataCollectionId?: string;
    /**
     * Data item contents.
     *
     * Property-value pairs representing the data item's payload. When retrieving a data item, it also includes the following read-only fields:
     *
     * + `_id`: Item ID.
     * + `_createdDate`: Date and time the item was added to the collection.
     * + `_updatedDate`: Date and time the item was last modified. When the item is first inserted, `_createdDate` and `_updatedDate` have the same value.
     * + `_ownerId`: ID of the user who created the item. Can be modified with site owner permissions.
     */
    data?: Record<string, any> | null;
}
export interface InsertDataItemRequest {
    /**
     * Environment: `LIVE` or `SANDBOX`.
     * @internal
     */
    environment?: Environment;
    /** ID of the collection in which to insert the item. */
    dataCollectionId: string;
    /** Item to insert. */
    dataItem: DataItem;
    /**
     * Grid app id. Optional in Live segment.
     * @internal
     */
    appId?: string | null;
    /**
     * If true, referenced items will be included.
     * @internal
     */
    includeReferencedItems?: boolean;
    /**
     * Data access options
     * @internal
     * @deprecated
     * @replacedBy inlined
     * @removalDate 2024-07-12
     */
    options?: Options;
    /**
     * Should hooks execution be suppressed.
     * This option can only be used with Corvid backend
     * code identity.
     * @internal
     */
    suppressHooks?: boolean;
    /** @internal */
    appOptions?: Record<string, any> | null;
}
export declare enum Environment {
    LIVE = "LIVE",
    SANDBOX = "SANDBOX",
    SANDBOX_PREFERRED = "SANDBOX_PREFERRED"
}
export interface Options {
    /**
     * Should hooks execution be suppressed.
     * This option can only be used with Corvid backend
     * code identity.
     * @internal
     */
    suppressHooks?: boolean;
    /** @internal */
    appOptions?: Record<string, any> | null;
    /** @internal */
    publishPluginOptions?: PublishPluginOptions;
}
export interface PublishPluginOptions {
    showDraftItems?: boolean;
}
export interface InsertDataItemResponse {
    /** Inserted data item. */
    dataItem?: DataItem;
}
export interface PatchDataItemRequest {
    /**
     * [Collection environment](https://support.wix.com/en/article/cms-about-sandbox-and-live-collections-and-syncing) from which to delete item.
     *
     * Default: `LIVE`.
     * @internal
     */
    environment?: Environment;
    /** ID of the collection that contains the item to patch. */
    dataCollectionId: string;
    /** Patch to apply to the item. */
    patch: Patch;
    /**
     * Grid app id. Optional in Live segment.
     * @internal
     */
    appId?: string | null;
    /**
     * Data access options
     * @internal
     * @deprecated
     * @replacedBy inlined
     * @removalDate 2024-07-12
     */
    options?: Options;
    /**
     * Should hooks execution be suppressed.
     * This option can only be used with Corvid backend
     * code identity.
     * @internal
     */
    suppressHooks?: boolean;
    /** @internal */
    appOptions?: Record<string, any> | null;
    /** @internal */
    publishPluginOptions?: DataPublishPluginOptions;
}
export interface Patch {
    /** ID of the item to patch. */
    dataItemId?: string;
    /** Modifications to apply. */
    fieldModifications?: FieldModification[];
}
export interface FieldModification extends FieldModificationActionOptionsOneOf {
    setFieldOptions?: SetFieldOptions;
    incrementFieldOptions?: IncrementFieldOptions;
    appendToArrayOptions?: AppendToArrayOptions;
    removeFromArrayOptions?: RemoveFromArrayOptions;
    /**
     * Path of the field ID to be modified. For example: `title`.
     *
     * Nested fields can be specified using dot notation. For example: `address.street`.
     */
    fieldPath?: string;
    /** Patch action to be applied to the specified field. */
    action?: ACTION;
}
/** @oneof */
export interface FieldModificationActionOptionsOneOf {
    setFieldOptions?: SetFieldOptions;
    incrementFieldOptions?: IncrementFieldOptions;
    appendToArrayOptions?: AppendToArrayOptions;
    removeFromArrayOptions?: RemoveFromArrayOptions;
}
export declare enum ACTION {
    UNKNOWN_ACTION = "UNKNOWN_ACTION",
    SET_FIELD = "SET_FIELD",
    REMOVE_FIELD = "REMOVE_FIELD",
    INCREMENT_FIELD = "INCREMENT_FIELD",
    APPEND_TO_ARRAY = "APPEND_TO_ARRAY",
    REMOVE_FROM_ARRAY = "REMOVE_FROM_ARRAY"
}
export interface SetFieldOptions {
    /**
     * Value to set for the specified field. This replaces the existing value.
     */
    value?: any;
}
export interface IncrementFieldOptions {
    /**
     * Numerical value by which to increment or decrement the current field value.
     */
    value?: number;
}
export interface AppendToArrayOptions {
    /**
     * Value to append to the specified array.
     */
    value?: any;
}
export interface RemoveFromArrayOptions {
    /**
     * Value to remove from the specified array.
     */
    value?: any;
}
export interface DataPublishPluginOptions {
    /**
     * Whether to include draft items.
     *
     * When `true`, the task deletes both published and draft items. Default: `false`.
     */
    includeDraftItems?: boolean;
}
export interface PatchDataItemResponse {
    /** Patched data item. */
    dataItem?: DataItem;
}
export interface BulkPatchDataItemsRequest {
    /**
     * [Collection environment](https://support.wix.com/en/article/cms-about-sandbox-and-live-collections-and-syncing) from which to delete item.
     *
     * Default: `LIVE`.
     * @internal
     */
    environment?: Environment;
    /** ID of the collection that contains the items to patch. */
    dataCollectionId: string;
    /** Patches to apply to the items. */
    patches: Patch[];
    /**
     * Grid app id. Optional in Live segment.
     * @internal
     */
    appId?: string | null;
    /**
     * Whether to return the updated data items.
     * When `true`, the `results` objects contain a `dataItem` field.
     *
     * Default: `false`
     */
    returnEntity?: boolean;
    /**
     * Prevents hooks from running for the operation. Can only be used in the backend code of a Wix site.
     * @internal
     */
    suppressHooks?: boolean;
    /** @internal */
    appOptions?: Record<string, any> | null;
    /** @internal */
    publishPluginOptions?: DataPublishPluginOptions;
}
export interface BulkPatchDataItemsResponse {
    /** Information about the updated items. */
    results?: BulkDataItemResult[];
    /** Bulk action metadata. */
    bulkActionMetadata?: BulkActionMetadata;
}
export interface BulkDataItemResult {
    /** The action attempted for the data item. */
    action?: BulkActionType;
    /** Metadata related to the data item for which the action was attempted. */
    itemMetadata?: ItemMetadata;
    /** The data item for which the action was attempted. Only returned if `returnEntity` is `true` in the request and the action is successful. */
    dataItem?: DataItem;
}
export declare enum BulkActionType {
    UNKNOWN_ACTION_TYPE = "UNKNOWN_ACTION_TYPE",
    INSERT = "INSERT",
    UPDATE = "UPDATE",
    DELETE = "DELETE",
    PATCH = "PATCH"
}
export interface ItemMetadata {
    /** Item ID. This field doesn't appear if there is no item ID, for example, when item creation fails. */
    id?: string | null;
    /** Index of the item within the request array. Allows for correlation between request and response items. */
    originalIndex?: number;
    /** Whether the requested action was successful for this item. When `false`, the `error` field is populated. */
    success?: boolean;
    /** Details about the error in case of failure. */
    error?: ApplicationError;
}
export interface ApplicationError {
    /** Error code. */
    code?: string;
    /** Description of the error. */
    description?: string;
    /** Data related to the error. */
    data?: Record<string, any> | null;
}
export interface BulkActionMetadata {
    /** Number of items successfully processed. */
    totalSuccesses?: number;
    /** Number of items that couldn't be processed. */
    totalFailures?: number;
}
export interface UpdateDataItemRequest {
    /**
     * Environment: `LIVE` or `SANDBOX`.
     * @internal
     */
    environment?: Environment;
    /** ID of the collection containing the existing item. */
    dataCollectionId: string;
    /** Updated data item content. The existing data item's content is replaced entirely. */
    dataItem: DataItem;
    /**
     * Grid app id. Optional in Live segment.
     * @internal
     */
    appId?: string | null;
    /**
     * If true, referenced items will be included.
     * @internal
     */
    includeReferencedItems?: boolean;
    /**
     * Data access options
     * @internal
     * @deprecated
     * @replacedBy inlined
     * @removalDate 2024-07-12
     */
    options?: Options;
    /**
     * Should hooks execution be suppressed.
     * This option can only be used with Corvid backend
     * code identity.
     * @internal
     */
    suppressHooks?: boolean;
    /** @internal */
    appOptions?: Record<string, any> | null;
    /** @internal */
    publishPluginOptions?: DataPublishPluginOptions;
}
export interface UpdateDataItemResponse {
    /** Updated data item. */
    dataItem?: DataItem;
}
export interface SaveDataItemRequest {
    /**
     * Environment: `LIVE` or `SANDBOX`.
     * @internal
     */
    environment?: Environment;
    /** ID of the collection in which to insert or update the item. */
    dataCollectionId: string;
    /** Data item to insert or update. */
    dataItem: DataItem;
    /**
     * Grid app id. Optional in Live segment.
     * @internal
     */
    appId?: string | null;
    /**
     * If true, referenced items will be included.
     * @internal
     */
    includeReferencedItems?: boolean;
    /**
     * Data access options
     * @internal
     * @deprecated
     * @replacedBy inlined
     * @removalDate 2024-07-12
     */
    options?: Options;
    /**
     * Should hooks execution be suppressed.
     * This option can only be used with Corvid backend
     * code identity.
     * @internal
     */
    suppressHooks?: boolean;
    /** @internal */
    appOptions?: Record<string, any> | null;
    /** @internal */
    publishPluginOptions?: DataPublishPluginOptions;
}
export interface SaveDataItemResponse {
    /**
     * Action carried out for the item.
     *
     * + `INSERTED`: A new item was added to the collection.
     * + `UPDATED`: An existing item in the collection was updated.
     */
    action?: Action;
    /** Inserted or updated data item. */
    dataItem?: DataItem;
}
export declare enum Action {
    UNKNOWN_ACTION = "UNKNOWN_ACTION",
    INSERTED = "INSERTED",
    UPDATED = "UPDATED"
}
export interface GetDataItemRequest {
    /**
     * Environment: `LIVE` or `SANDBOX`.
     * @internal
     */
    environment?: Environment;
    /** ID of the collection from which to retrieve the data item. */
    dataCollectionId: string;
    /** ID of the data item to retrieve. */
    dataItemId: string;
    /**
     * Grid app id. Optional in Live segment.
     * @internal
     */
    appId?: string | null;
    /**
     * Data access options
     * @internal
     * @deprecated
     * @replacedBy inlined
     * @removalDate 2024-07-12
     */
    options?: Options;
    /**
     * Whether to retrieve data from the primary database instance.
     * This decreases performance but ensures data retrieved is up to date even immediately after an update.
     * Learn more about [Wix Data and eventual consistency](https://dev.wix.com/api/rest/wix-data/wix-data/eventual-consistency).
     *
     * Default: `false`
     */
    consistentRead?: boolean;
    /**
     * Language to translate result text into, in [IETF BCP 47 language tag](https://en.wikipedia.org/wiki/IETF_language_tag) format.
     * If provided, the result text is returned in the specified language. If not provided, the result text is not translated.
     *
     * **Note:** Translation for the specified language must be enabled for the collection in [Wix Multilingual](https://www.wix.com/app-market/wix-multilingual).
     *
     */
    language?: string | null;
    /**
     * Fields to return for the item. Only fields specified in the array are included in the response. If the array is empty, all fields are returned.
     *
     * **Note:** The `_id` system field is always returned.
     */
    fields?: string[];
    /**
     * Should hooks execution be suppressed.
     * This option can only be used with Corvid backend
     * code identity.
     * @internal
     */
    suppressHooks?: boolean;
    /** @internal */
    appOptions?: Record<string, any> | null;
    /** @internal */
    publishPluginOptions?: DataPublishPluginOptions;
}
export interface GetDataItemResponse {
    /** Retrieved item. */
    dataItem?: DataItem;
}
export interface RemoveDataItemRequest {
    /**
     * Environment: `LIVE` or `SANDBOX`
     * @internal
     */
    environment?: Environment;
    /** ID of the collection from which to remove the item. */
    dataCollectionId: string;
    /** ID of the item to remove. */
    dataItemId: string;
    /**
     * Grid app id. Optional in Live segment.
     * @internal
     */
    appId?: string | null;
    /**
     * Data access options
     * @internal
     * @deprecated
     * @replacedBy inlined
     * @removalDate 2024-07-12
     */
    options?: Options;
    /**
     * Should hooks execution be suppressed.
     * This option can only be used with Corvid backend
     * code identity.
     * @internal
     */
    suppressHooks?: boolean;
    /** @internal */
    appOptions?: Record<string, any> | null;
    /** @internal */
    publishPluginOptions?: DataPublishPluginOptions;
}
export interface RemoveDataItemResponse {
    /** Removed item. */
    dataItem?: DataItem;
}
export interface TruncateDataItemsRequest {
    /**
     * Environment: `LIVE` or `SANDBOX`.
     * @internal
     */
    environment?: Environment;
    /** ID of the collection to truncate. */
    dataCollectionId: string;
    /**
     * Grid app id. Optional in Live segment.
     * @internal
     */
    appId?: string | null;
    /**
     * Data access options
     * @internal
     * @deprecated
     * @replacedBy inlined
     * @removalDate 2024-07-12
     */
    options?: Options;
}
export interface TruncateDataItemsResponse {
}
export interface QueryDataItemsRequest {
    /**
     * Environment: `LIVE` or `SANDBOX`.
     * @internal
     */
    environment?: Environment;
    /** ID of the collection to query. */
    dataCollectionId: string;
    /** Query preferences. For more details on using queries, see [API Query Language](https://dev.wix.com/api/rest/getting-started/api-query-language). */
    query?: QueryV2;
    /**
     * Whether to return the total count in the response for a query with offset paging.
     * When `true`, the `pagingMetadata` object in the response contains a `total` field.
     *
     * Default: `false`
     */
    returnTotalCount?: boolean;
    /**
     * Properties for which to include referenced items in the query's results.
     * Up to 50 referenced items can be included for each item that matches the query.
     * @deprecated
     * @replacedBy referenced_item_options
     * @removalDate 2025-08-01
     */
    includeReferencedItems?: string[];
    /**
     * Grid app id. Optional in Live segment.
     * @internal
     */
    appId?: string | null;
    /**
     * Data access options
     * @internal
     * @deprecated
     * @replacedBy inlined
     * @removalDate 2024-07-12
     */
    options?: Options;
    /**
     * Whether to retrieve data from the primary database instance.
     * This decreases performance but ensures data retrieved is up to date even immediately after an update.
     * Learn more about [Wix Data and eventual consistency](https://dev.wix.com/api/rest/wix-data/wix-data/eventual-consistency).
     *
     * Default: `false`
     */
    consistentRead?: boolean;
    /**
     * Language to translate result text into, in [IETF BCP 47 language tag](https://en.wikipedia.org/wiki/IETF_language_tag) format.
     * If provided, the result text is returned in the specified language. If not provided, the result text is not translated.
     *
     * **Note:** Translation for the specified language must be enabled for the collection in [Wix Multilingual](https://www.wix.com/app-market/wix-multilingual).
     *
     */
    language?: string | null;
    /**
     * Request information about this collection caching
     * @internal
     */
    requestCachingInfo?: boolean;
    /**
     * Should hooks execution be suppressed.
     * This option can only be used with Corvid backend
     * code identity.
     * @internal
     */
    suppressHooks?: boolean;
    /** @internal */
    appOptions?: Record<string, any> | null;
    /** @internal */
    publishPluginOptions?: DataPublishPluginOptions;
    /** Options for retrieving referenced items. */
    referencedItemOptions?: ReferencedItemOptions[];
}
export interface QueryV2 extends QueryV2PagingMethodOneOf {
    /** Paging options to limit and skip the number of items. */
    paging?: Paging;
    /** Cursor token pointing to a page of results. Not used in the first request. Following requests use the cursor token and not `filter` or `sort`. */
    cursorPaging?: CursorPaging;
    /**
     * Filter object in the following format:
     *
     * `"filter" : {
     * "fieldName1": "value1",
     * "fieldName2":{"$operator":"value2"}
     * }`
     *
     * Examples of operators: `$eq`, `$ne`, `$lt`, `$lte`, `$gt`, `$gte`, `$in`, `$hasSome`, `$hasAll`, `$startsWith`, `$contains`
     *
     * **Note:** The values you provide for each field must adhere to that field's type. For example, when filtering by a field whose type is Date and Time, use an object in the following format: `"someDateAndTimeFieldKey": { "$date": "YYYY-MM-DDTHH:mm:ss.sssZ"}`. Learn more about [data types in Wix Data](https://dev.wix.com/docs/rest/business-solutions/cms/data-items/data-types-in-wix-data).
     */
    filter?: Record<string, any> | null;
    /**
     * Sort object in the following format:
     * `[{"fieldName":"sortField1","order":"ASC"},{"fieldName":"sortField2","order":"DESC"}]`
     */
    sort?: Sorting[];
    /**
     * Fields to return for each item. Only fields specified in the array are included in the response. If the array is empty, all fields are returned.
     * **Note:** The `_id` system field is always returned.
     */
    fields?: string[];
}
/** @oneof */
export interface QueryV2PagingMethodOneOf {
    /** Paging options to limit and skip the number of items. */
    paging?: Paging;
    /** Cursor token pointing to a page of results. Not used in the first request. Following requests use the cursor token and not `filter` or `sort`. */
    cursorPaging?: CursorPaging;
}
export interface Sorting {
    /** Name of the field to sort by. */
    fieldName?: string;
    /** Sort order. */
    order?: SortOrder;
}
export declare enum SortOrder {
    ASC = "ASC",
    DESC = "DESC"
}
export interface Paging {
    /** Number of items to load. */
    limit?: number | null;
    /** Number of items to skip in the current sort order. */
    offset?: number | null;
}
export interface CursorPaging {
    /** Number of items to load. */
    limit?: number | null;
    /**
     * Pointer to the next or previous page in the list of results.
     *
     * You can get the relevant cursor token
     * from the `pagingMetadata` object in the previous call's response.
     * Not relevant for the first request.
     */
    cursor?: string | null;
}
export interface ReferencedItemOptions {
    /** Field containing references in the queried item. */
    fieldName?: string;
    /** Maximum number of referenced items to include for each queried item. */
    limit?: number | null;
}
export interface QueryDataItemsResponse {
    /** Retrieved items. */
    dataItems?: DataItem[];
    /**
     * Caching info. Returned if `request_caching_info` is true in the request and caching is allowed.
     * @internal
     */
    cachingInfo?: CachingInfo;
    /** Paging information. */
    pagingMetadata?: PagingMetadataV2;
}
export interface CachingInfo {
    /** Caching tags for this collection */
    tags?: string[];
    /** max caching time if set */
    maxAge?: number | null;
}
export interface PagingMetadataV2 {
    /** Number of items returned in the response. */
    count?: number | null;
    /** Offset that was requested. */
    offset?: number | null;
    /** Total number of items that match the query. Returned if offset paging is used, `returnTotalCount` is `true` in the request, and `tooManyToCount` is false. */
    total?: number | null;
    /** Whether the server failed to calculate the `total` field. */
    tooManyToCount?: boolean | null;
    /** Cursors to navigate through the result pages using `next` and `prev`. Returned if cursor paging is used. */
    cursors?: Cursors;
    /**
     * Indicates if there are more results after the current page.
     * If `true`, another page of results can be retrieved.
     * If `false`, this is the last page.
     * @internal
     */
    hasNext?: boolean | null;
}
export interface Cursors {
    /** Cursor pointing to next page in the list of results. */
    next?: string | null;
    /** Cursor pointing to previous page in the list of results. */
    prev?: string | null;
}
export interface AggregateDataItemsRequest extends AggregateDataItemsRequestPagingMethodOneOf {
    /** Paging options to limit and skip the number of items. */
    paging?: Paging;
    /** Cursor token pointing to a page of results. Not used in the first request. Following requests use the cursor token and not `filter` or `sort`. */
    cursorPaging?: CursorPaging;
    /**
     * Environment: `LIVE` or `SANDBOX`.
     * @internal
     */
    environment?: Environment;
    /** ID of the collection on which to run the aggregation. */
    dataCollectionId: string;
    /**
     * Filter applied to the collection's data prior to running the aggregation. See [API Query Language](https://dev.wix.com/api/rest/getting-started/api-query-language#getting-started_api-query-language_the-filter-section) for information on how to structure a filter object.
     *
     * **Note:** The values you provide for each filter field must adhere to that field's type. For example, when filtering by a field whose type is Date and Time, use an object in the following format: `"someDateAndTimeFieldKey": { "$date": "YYYY-MM-DDTHH:mm:ss.sssZ"}`. Learn more about [data types in Wix Data](https://dev.wix.com/docs/rest/business-solutions/cms/data-items/data-types-in-wix-data).
     */
    initialFilter?: Record<string, any> | null;
    /** Aggregation applied to the data. */
    aggregation?: Aggregation;
    /**
     * Filter applied to the processed data following the aggregation. See [API Query Language](https://dev.wix.com/api/rest/getting-started/api-query-language#getting-started_api-query-language_the-filter-section) for information on how to structure a filter object.
     * **Note:** The values you provide for each filter field must adhere to that field's type. For example, when filtering by a field whose type is Date and Time, use an object in the following format: `"someDateAndTimeFieldKey": { "$date": "YYYY-MM-DDTHH:mm:ss.sssZ"}`. Learn more about [data types in Wix Data](https://dev.wix.com/docs/rest/business-solutions/cms/data-items/data-types-in-wix-data).
     */
    finalFilter?: Record<string, any> | null;
    /**
     * Sort object in the following format:
     * `[{"fieldName":"sortField1","order":"ASC"},{"fieldName":"sortField2","order":"DESC"}]`
     */
    sort?: Sorting[];
    /**
     * Whether to return the total count in the response for a query with offset paging.
     * When `true`, the `pagingMetadata` object in the response contains a `total` field.
     *
     * Default: `false`
     */
    returnTotalCount?: boolean;
    /**
     * Grid app ID. Optional in `LIVE` segment.
     * @internal
     */
    appId?: string | null;
    /**
     * Data access options
     * @internal
     * @deprecated
     * @replacedBy inlined
     * @removalDate 2024-07-12
     */
    options?: Options;
    /**
     * Whether to retrieve data from the primary database instance.
     * This decreases performance but ensures data retrieved is up to date even immediately after an update.
     * Learn more about [Wix Data and eventual consistency](https://dev.wix.com/api/rest/wix-data/wix-data/eventual-consistency).
     *
     * Default: `false`
     */
    consistentRead?: boolean;
    /**
     * Language to translate result text into, in [IETF BCP 47 language tag](https://en.wikipedia.org/wiki/IETF_language_tag) format.
     * If provided, the result text is returned in the specified language. If not provided, the result text is not translated.
     *
     * **Note:** Translation for the specified language must be enabled for the collection in [Wix Multilingual](https://www.wix.com/app-market/wix-multilingual).
     *
     */
    language?: string | null;
    /** @internal */
    appOptions?: Record<string, any> | null;
    /** @internal */
    publishPluginOptions?: DataPublishPluginOptions;
}
/** @oneof */
export interface AggregateDataItemsRequestPagingMethodOneOf {
    /** Paging options to limit and skip the number of items. */
    paging?: Paging;
    /** Cursor token pointing to a page of results. Not used in the first request. Following requests use the cursor token and not `filter` or `sort`. */
    cursorPaging?: CursorPaging;
}
export interface Average {
    /** Name of the field for which to calculate the average value. */
    itemFieldName?: string;
}
export interface Min {
    /** Name of the field for which to calculate the minimum value. */
    itemFieldName?: string;
}
export interface Max {
    /** Name of the field for which to calculate the maximum value. */
    itemFieldName?: string;
}
export interface Sum {
    /** Name of the field for which to calculate the sum. */
    itemFieldName?: string;
}
export interface Count {
}
export interface Operation extends OperationCalculateOneOf {
    /** Calculate the average value of a specified field for all items in the grouping. */
    average?: Average;
    /** Calculate the minimum value of a specified field for all items in the grouping. */
    min?: Min;
    /** Calculate the maximum value of a specified field for all items in the grouping. */
    max?: Max;
    /** Calculate the sum of values of a specified field for all items in the grouping. */
    sum?: Sum;
    /** Calculate the number of items in the grouping. */
    itemCount?: Count;
    /** Name of the field containing results of the operation. */
    resultFieldName?: string;
}
/** @oneof */
export interface OperationCalculateOneOf {
    /** Calculate the average value of a specified field for all items in the grouping. */
    average?: Average;
    /** Calculate the minimum value of a specified field for all items in the grouping. */
    min?: Min;
    /** Calculate the maximum value of a specified field for all items in the grouping. */
    max?: Max;
    /** Calculate the sum of values of a specified field for all items in the grouping. */
    sum?: Sum;
    /** Calculate the number of items in the grouping. */
    itemCount?: Count;
}
export interface Aggregation {
    /** Fields by which to group items for the aggregation. If empty, the aggregation is carried out on all items in the collection. */
    groupingFields?: string[];
    /** Operations to carry out on the data in each grouping. */
    operations?: Operation[];
}
export interface AggregateDataItemsResponse {
    /** Aggregation results. */
    results?: Record<string, any>[] | null;
    /** Paging information. */
    pagingMetadata?: PagingMetadataV2;
}
export interface CountDataItemsRequest {
    /**
     * Environment: `LIVE` or `SANDBOX`.
     * @internal
     */
    environment?: Environment;
    /** ID of the collection for which to count query results. */
    dataCollectionId: string;
    /**
     * Filter object in the following format:
     *
     * `"filter" : {
     * "fieldName1": "value1",
     * "fieldName2":{"$operator":"value2"}
     * }`.
     *
     * Examples of operators: `$eq`, `$ne`, `$lt`, `$lte`, `$gt`, `$gte`, `$in`, `$hasSome`, `$hasAll`, `$startsWith`, `$contains`.
     *
     * **Note:** The values you provide for each field must adhere to that field's type. For example, when filtering by a field whose type is Date and Time, use an object in the following format: `"someDateAndTimeFieldKey": { "$date": "YYYY-MM-DDTHH:mm:ss.sssZ"}`. Learn more about [data types in Wix Data](https://dev.wix.com/docs/rest/business-solutions/cms/data-items/data-types-in-wix-data).
     */
    filter?: Record<string, any> | null;
    /**
     * Grid app ID. Optional in `LIVE` segment.
     * @internal
     */
    appId?: string | null;
    /**
     * Data access options
     * @internal
     * @deprecated
     * @replacedBy inlined
     * @removalDate 2024-07-12
     */
    options?: Options;
    /**
     * Whether to retrieve data from the primary database instance.
     * This decreases performance but ensures data retrieved is up to date even immediately after an update.
     * Learn more about [Wix Data and eventual consistency](https://dev.wix.com/api/rest/wix-data/wix-data/eventual-consistency).
     *
     * Default: `false`
     */
    consistentRead?: boolean;
    /**
     * Language to translate result text into, in [IETF BCP 47 language tag](https://en.wikipedia.org/wiki/IETF_language_tag) format.
     * If provided, the result text is returned in the specified language. If not provided, the result text is not translated.
     * **Note:** Translation for the specified language must be enabled for the collection in [Wix Multilingual](https://www.wix.com/app-market/wix-multilingual).
     */
    language?: string | null;
    /**
     * Should hooks execution be suppressed.
     * This option can only be used with Corvid backend
     * code identity.
     * @internal
     */
    suppressHooks?: boolean;
    /** @internal */
    appOptions?: Record<string, any> | null;
    /** @internal */
    publishPluginOptions?: DataPublishPluginOptions;
}
export interface CountDataItemsResponse {
    /** Number of items matching the query. */
    totalCount?: number;
}
export interface QueryDistinctValuesRequest extends QueryDistinctValuesRequestPagingMethodOneOf {
    /** Paging options to limit and skip the number of items. */
    paging?: Paging;
    /** Cursor token pointing to a page of results. Not used in the first request. Following requests use the cursor token and not `filter` or `sort`. */
    cursorPaging?: CursorPaging;
    /**
     * Environment: `LIVE` or `SANDBOX`.
     * @internal
     */
    environment?: Environment;
    /** ID of the collection to query. */
    dataCollectionId: string;
    /** Item field name for which to return all distinct values. */
    fieldName?: string;
    /**
     * Filter object in the following format:
     *
     * `"filter" : {
     * "fieldName1": "value1",
     * "fieldName2":{"$operator":"value2"}
     * }`.
     *
     * Examples of operators: `$eq`, `$ne`, `$lt`, `$lte`, `$gt`, `$gte`, `$in`, `$hasSome`, `$hasAll`, `$startsWith`, `$contains`.
     *
     * **Note:** The values you provide for each field must adhere to that field's type. For example, when filtering by a field whose type is Date and Time, use an object in the following format: `"someDateAndTimeFieldKey": { "$date": "YYYY-MM-DDTHH:mm:ss.sssZ"}`. Learn more about [data types in Wix Data](https://dev.wix.com/docs/rest/business-solutions/cms/data-items/data-types-in-wix-data).
     */
    filter?: Record<string, any> | null;
    /** Sort order. */
    order?: SortOrder;
    /**
     * Whether to return the total count in the response for a query with offset paging.
     * When `true`, the `pagingMetadata` object in the response contains a `total` field.
     *
     * Default: `false`
     */
    returnTotalCount?: boolean;
    /**
     * Grid app id. Optional in Live segment.
     * @internal
     */
    appId?: string | null;
    /**
     * Data access options
     * @internal
     * @deprecated
     * @replacedBy inlined
     * @removalDate 2024-07-12
     */
    options?: Options;
    /**
     * Whether to retrieve data from the primary database instance.
     * This decreases performance but ensures data retrieved is up to date even immediately after an update.
     * Learn more about [Wix Data and eventual consistency](https://dev.wix.com/api/rest/wix-data/wix-data/eventual-consistency).
     *
     * Default: `false`
     */
    consistentRead?: boolean;
    /**
     * Language to translate result text into, in [IETF BCP 47 language tag](https://en.wikipedia.org/wiki/IETF_language_tag) format.
     * If provided, the result text is returned in the specified language. If not provided, the result text is not translated.
     *
     * > **Note:** Translation for the specified language must be enabled for the collection in [Wix Multilingual](https://www.wix.com/app-market/wix-multilingual).
     *
     */
    language?: string | null;
    /** @internal */
    publishPluginOptions?: DataPublishPluginOptions;
}
/** @oneof */
export interface QueryDistinctValuesRequestPagingMethodOneOf {
    /** Paging options to limit and skip the number of items. */
    paging?: Paging;
    /** Cursor token pointing to a page of results. Not used in the first request. Following requests use the cursor token and not `filter` or `sort`. */
    cursorPaging?: CursorPaging;
}
export interface QueryDistinctValuesResponse {
    /** List of distinct values contained in the field specified in `fieldName`. */
    distinctValues?: any[];
    /** Paging information. */
    pagingMetadata?: PagingMetadataV2;
}
export interface BulkInsertDataItemsRequest {
    /**
     * Environment: `LIVE` or `SANDBOX`.
     * @internal
     */
    environment?: Environment;
    /** ID of the collection in which to insert the items. */
    dataCollectionId: string;
    /** Data items to insert. */
    dataItems: DataItem[];
    /**
     * Grid app ID. Optional in `LIVE` segment.
     * @internal
     */
    appId?: string | null;
    /**
     * Data access options.
     * @internal
     * @deprecated
     * @replacedBy inlined
     * @removalDate 2024-07-12
     */
    options?: Options;
    /**
     * Whether to return the inserted data items.
     * When `true`, the `results` objects contain a `dataItem` field.
     *
     * Default: `false`
     */
    returnEntity?: boolean;
    /**
     * Should hooks execution be suppressed.
     * This option can only be used with Corvid backend
     * code identity.
     * @internal
     */
    suppressHooks?: boolean;
    /** @internal */
    appOptions?: Record<string, any> | null;
}
export interface BulkInsertDataItemsResponse {
    /** Information about the inserted items. */
    results?: BulkDataItemResult[];
    /** Bulk action metadata. */
    bulkActionMetadata?: BulkActionMetadata;
}
export interface BulkUpdateDataItemsRequest {
    /**
     * Environment: `LIVE` or `SANDBOX`.
     * @internal
     */
    environment?: Environment;
    /** ID of the collection in which to update items. */
    dataCollectionId: string;
    /** Data items to update. */
    dataItems: DataItem[];
    /**
     * Grid app id. Optional in Live segment.
     * @internal
     */
    appId?: string | null;
    /**
     * Data access options
     * @internal
     * @deprecated
     * @replacedBy inlined
     * @removalDate 2024-07-12
     */
    options?: Options;
    /**
     * Whether to return the updated data items.
     * When `true`, the `results` objects contain a `dataItem` field.
     *
     * Default: `false`
     */
    returnEntity?: boolean;
    /**
     * Should hooks execution be suppressed.
     * This option can only be used with Corvid backend
     * code identity.
     * @internal
     */
    suppressHooks?: boolean;
    /** @internal */
    appOptions?: Record<string, any> | null;
    /** @internal */
    publishPluginOptions?: DataPublishPluginOptions;
}
export interface BulkUpdateDataItemsResponse {
    /** Information about the updated items. */
    results?: BulkDataItemResult[];
    /** Bulk action metadata. */
    bulkActionMetadata?: BulkActionMetadata;
}
export interface BulkSaveDataItemsRequest {
    /**
     * Environment: LIVE or SANDBOX
     * @internal
     */
    environment?: Environment;
    /** ID of the collection in which to insert or update the items. */
    dataCollectionId: string;
    /** Data items to insert or update. */
    dataItems: DataItem[];
    /**
     * Grid app id. Optional in Live segment.
     * @internal
     */
    appId?: string | null;
    /**
     * Data access options
     * @internal
     * @deprecated
     * @replacedBy inlined
     * @removalDate 2024-07-12
     */
    options?: Options;
    /**
     * Whether to return the saved data item.
     * When `true`, the `results` objects contain a `dataItem` field.
     *
     * Default: `false`
     */
    returnEntity?: boolean;
    /**
     * Should hooks execution be suppressed.
     * This option can only be used with Corvid backend
     * code identity.
     * @internal
     */
    suppressHooks?: boolean;
    /** @internal */
    appOptions?: Record<string, any> | null;
    /** @internal */
    publishPluginOptions?: DataPublishPluginOptions;
}
export interface BulkSaveDataItemsResponse {
    /** Information about the saved items. */
    results?: BulkDataItemResult[];
    /** Bulk action metadata. */
    bulkActionMetadata?: BulkActionMetadata;
}
export interface BulkRemoveDataItemsRequest {
    /**
     * Environment: `LIVE` or `SANDBOX`.
     * @internal
     */
    environment?: Environment;
    /** ID of the collection from which to remove the item. */
    dataCollectionId: string;
    /** IDs of data items to remove. */
    dataItemIds: string[];
    /**
     * Grid app id. Optional in Live segment.
     * @internal
     */
    appId?: string | null;
    /**
     * Data access options
     * @internal
     * @deprecated
     * @replacedBy inlined
     * @removalDate 2024-07-12
     */
    options?: Options;
    /**
     * Should hooks execution be suppressed.
     * This option can only be used with Corvid backend
     * code identity.
     * @internal
     */
    suppressHooks?: boolean;
    /** @internal */
    appOptions?: Record<string, any> | null;
    /** @internal */
    publishPluginOptions?: DataPublishPluginOptions;
}
export interface BulkRemoveDataItemsResponse {
    /** Information about the removed data items. */
    results?: BulkDataItemResult[];
    /** Bulk action metadata. */
    bulkActionMetadata?: BulkActionMetadata;
}
export interface QueryReferencedDataItemsRequest extends QueryReferencedDataItemsRequestPagingMethodOneOf {
    /** Paging options to limit and skip the number of items. */
    paging?: Paging;
    /** Cursor token pointing to a page of results. Not used in the first request. Following requests use the cursor token and not `filter` or `sort`. */
    cursorPaging?: CursorPaging;
    /**
     * Environment: `LIVE` or `SANDBOX`.
     * @internal
     */
    environment?: Environment;
    /** ID of the collection containing the referring item. */
    dataCollectionId: string;
    /** ID of the referring item. */
    referringItemId?: string;
    /** Field containing references in the referring item. */
    referringItemFieldName?: string;
    /** Order of the returned referenced items. Sorted by the date each item was referenced. */
    order?: SortOrder;
    /**
     * Whether to return the total count in the response.
     * When `true`, the `pagingMetadata` object in the response contains a `total` field.
     *
     * Default: `false`
     */
    returnTotalCount?: boolean;
    /**
     * Grid app ID. Optional in `LIVE` segment.
     * @internal
     */
    appId?: string | null;
    /**
     * Data access options
     * @internal
     * @deprecated
     * @replacedBy inlined
     * @removalDate 2024-07-12
     */
    options?: Options;
    /**
     * Whether to retrieve data from the primary database instance.
     * This decreases performance but ensures data retrieved is up to date even immediately after an update.
     * Learn more about [Wix Data and eventual consistency](https://dev.wix.com/api/rest/wix-data/wix-data/eventual-consistency).
     *
     * Default: `false`
     */
    consistentRead?: boolean;
    /**
     * Language to translate result text into, in [IETF BCP 47 language tag](https://en.wikipedia.org/wiki/IETF_language_tag) format.
     * If provided, the result text is returned in the specified language. If not provided, the result text is not translated.
     *
     * **Note:** Translation for the specified language must be enabled for the collection in [Wix Multilingual](https://www.wix.com/app-market/wix-multilingual).
     *
     */
    language?: string | null;
    /**
     * Fields to return for each referenced item. Only fields specified in the array are included in the response. If the array is empty, all fields are returned.
     * **Note:** The `_id` system field is always returned.
     */
    fields?: string[];
    /** @internal */
    appOptions?: Record<string, any> | null;
    /** @internal */
    publishPluginOptions?: DataPublishPluginOptions;
}
/** @oneof */
export interface QueryReferencedDataItemsRequestPagingMethodOneOf {
    /** Paging options to limit and skip the number of items. */
    paging?: Paging;
    /** Cursor token pointing to a page of results. Not used in the first request. Following requests use the cursor token and not `filter` or `sort`. */
    cursorPaging?: CursorPaging;
}
export interface QueryReferencedDataItemsResponse {
    /** Referenced items and/or IDs. For successfully resolved references, the referenced data item is returned. For references that can't be resolved, the ID is returned. */
    results?: ReferencedResult[];
    /** Paging information. */
    pagingMetadata?: PagingMetadataV2;
}
export interface UnresolvedReference {
    /** ID of the referring item. */
    referringItemId?: string;
    /** Field specified to query for references. */
    referringItemFieldName?: string;
}
export interface ReferencedResult extends ReferencedResultEntityOneOf {
    /** Data item referenced. */
    dataItem?: DataItem;
    /** Unresolved reference. Appears instead of the data item when the reference doesn't resolve, for example, when an ID isn't found or if an item is in draft state. */
    unresolvedReference?: UnresolvedReference;
}
/** @oneof */
export interface ReferencedResultEntityOneOf {
    /** Data item referenced. */
    dataItem?: DataItem;
    /** Unresolved reference. Appears instead of the data item when the reference doesn't resolve, for example, when an ID isn't found or if an item is in draft state. */
    unresolvedReference?: UnresolvedReference;
}
export interface IsReferencedDataItemRequest {
    /**
     * Environment: `LIVE` or `SANDBOX`.
     * @internal
     */
    environment?: Environment;
    /** ID of the collection containing the referring data item. */
    dataCollectionId: string;
    /** Field to check for a reference to the item that may be referenced. */
    referringItemFieldName: string;
    /** ID of the referring item. */
    referringItemId: string;
    /** ID of the item that may be referenced. */
    referencedItemId: string;
    /**
     * Grid app id. Optional in Live segment.
     * @internal
     */
    appId?: string | null;
    /**
     * Data access options
     * @internal
     * @deprecated
     * @replacedBy inlined
     * @removalDate 2024-07-12
     */
    options?: Options;
    /**
     * Whether to retrieve data from the primary database instance.
     * This decreases performance but ensures data retrieved is up to date even immediately after an update.
     * Learn more about [Wix Data and eventual consistency](https://dev.wix.com/api/rest/wix-data/wix-data/eventual-consistency).
     *
     * Default: `false`
     */
    consistentRead?: boolean;
    /** @internal */
    appOptions?: Record<string, any> | null;
}
export interface IsReferencedDataItemResponse {
    /** Whether the specified reference exists. */
    isReferenced?: boolean;
}
export interface InsertDataItemReferenceRequest {
    /**
     * Environment: `LIVE` or `SANDBOX`.
     * @internal
     */
    environment?: Environment;
    /** ID of the collection in which to insert the reference. */
    dataCollectionId: string;
    /** Reference to insert */
    dataItemReference?: DataItemReference;
    /**
     * Grid app id. Optional in Live segment.
     * @internal
     */
    appId?: string | null;
    /**
     * Data access options
     * @internal
     * @deprecated
     * @replacedBy inlined
     * @removalDate 2024-07-12
     */
    options?: Options;
    /** @internal */
    appOptions?: Record<string, any> | null;
}
export interface DataItemReference {
    /** Referring item field containing the references to the referenced items. */
    referringItemFieldName?: string;
    /** ID of the referring item. */
    referringItemId?: string;
    /** ID of the referenced item. */
    referencedItemId?: string;
}
export interface InsertDataItemReferenceResponse {
    /** Inserted reference. */
    dataItemReference?: DataItemReference;
}
export interface RemoveDataItemReferenceRequest {
    /**
     * Environment: `LIVE` or `SANDBOX`.
     * @internal
     */
    environment?: Environment;
    /** ID of the collection containing the referring item. */
    dataCollectionId: string;
    /** Reference to remove. */
    dataItemReference: DataItemReference;
    /**
     * Grid app id. Optional in Live segment.
     * @internal
     */
    appId?: string | null;
    /**
     * Data access options
     * @internal
     * @deprecated
     * @replacedBy inlined
     * @removalDate 2024-07-12
     */
    options?: Options;
    /** @internal */
    appOptions?: Record<string, any> | null;
}
export interface RemoveDataItemReferenceResponse {
    /** Removed reference. */
    dataItemReference?: DataItemReference;
}
export interface BulkInsertDataItemReferencesRequest {
    /**
     * Environment: `LIVE` or `SANDBOX`.
     * @internal
     */
    environment?: Environment;
    /** ID of the collection containing the referring items. */
    dataCollectionId: string;
    /** References to insert. */
    dataItemReferences: DataItemReference[];
    /**
     * Grid app ID. Optional in `LIVE` segment.
     * @internal
     */
    appId?: string | null;
    /**
     * Data access options
     * @internal
     * @deprecated
     * @replacedBy inlined
     * @removalDate 2024-07-12
     */
    options?: Options;
    /**
     * Whether to return the inserted data item references.
     * When `true`, the `results` objects contain a `dataItemReference` field.
     *
     * Default: `false`
     */
    returnEntity?: boolean;
    /** @internal */
    appOptions?: Record<string, any> | null;
}
export interface BulkInsertDataItemReferencesResponse {
    /** Information about the inserted references. */
    results?: BulkDataItemReferenceResult[];
    /** Bulk action metadata. */
    bulkActionMetadata?: BulkActionMetadata;
}
export interface BulkDataItemReferenceResult {
    /** Action attempted for the reference. */
    action?: BulkActionType;
    /** Metadata related to the reference for which the action was attempted. */
    referenceMetadata?: ItemMetadata;
    /** Reference for which the action was attempted. Only returned if `returnEntity` is `true` in the request and the action is successful. */
    dataItemReference?: DataItemReference;
}
export interface BulkRemoveDataItemReferencesRequest {
    /**
     * Environment: `LIVE` or `SANDBOX`.
     * @internal
     */
    environment?: Environment;
    /** ID of the collection containing the referring items. */
    dataCollectionId: string;
    /** References to remove. */
    dataItemReferences: DataItemReference[];
    /**
     * Grid app ID. Optional in `LIVE` segment.
     * @internal
     */
    appId?: string | null;
    /**
     * Data access options
     * @internal
     * @deprecated
     * @replacedBy inlined
     * @removalDate 2024-07-12
     */
    options?: Options;
    /** @internal */
    appOptions?: Record<string, any> | null;
}
export interface BulkRemoveDataItemReferencesResponse {
    /** Information about the removed references. */
    results?: BulkDataItemReferenceResult[];
    /** Bulk action metadata. */
    bulkActionMetadata?: BulkActionMetadata;
}
export interface ReplaceDataItemReferencesRequest {
    /**
     * Environment: `LIVE` or `SANDBOX`.
     * @internal
     */
    environment?: Environment;
    /** ID of the collection containing the referring item. */
    dataCollectionId: string;
    /** Field containing references in the referring item. */
    referringItemFieldName: string;
    /** ID of the referring item. */
    referringItemId: string;
    /** List of new referenced item IDs to replace the existing ones. */
    newReferencedItemIds?: string[];
    /**
     * Grid app ID. Optional in `LIVE` segment.
     * @internal
     */
    appId?: string | null;
    /**
     * Data access options
     * @internal
     * @deprecated
     * @replacedBy inlined
     * @removalDate 2024-07-12
     */
    options?: Options;
    /** @internal */
    appOptions?: Record<string, any> | null;
}
export interface ReplaceDataItemReferencesResponse {
    /** Updated references. */
    dataItemReferences?: DataItemReference[];
}
export interface SearchDataItemsRequest {
    /**
     * Environment: LIVE or SANDBOX
     * @internal
     */
    environment?: Environment;
    /**
     * ID of the collection to query.
     * @maxLength 255
     */
    dataCollectionId: string;
    /** Search. */
    search?: Search;
    /**
     * Grid app id. Optional in Live segment.
     * @internal
     * @format GUID
     */
    appId?: string | null;
    /**
     * NOT IMPLEMENTED!
     * Language to translate result text into, in [IETF BCP 47 language tag](https://en.wikipedia.org/wiki/IETF_language_tag) format.
     * If provided, the result text is returned in the specified language.
     * **Note:** Translation for the specified language must be enabled for the collection in [Wix Multilingual](https://www.wix.com/app-market/wix-multilingual).
     *
     * If not provided, result text is not translated.
     * @internal
     * @format LANGUAGE_TAG
     */
    language?: string | null;
    /**
     * Whether to suppress data hooks.
     * When `true`, data hooks typically triggered by this endpoint don't run.
     *
     * **Note:** This option can only be used in code that runs in [the Wix site backend](https://dev.wix.com/docs/develop-websites/articles/coding-with-velo/backend-code/about-the-site-backend).
     *
     * Default: `false`
     * @internal
     */
    suppressHooks?: boolean;
    /**
     * Options for the Publish plugin.
     * This plugin allows items in a [data collection](https://dev.wix.com/docs/rest/business-solutions/cms/data-collections/data-collection-object) to be marked as draft or published. Published items are visible to site visitors, while draft items are not.
     */
    publishPluginOptions?: DataPublishPluginOptions;
    /**
     * Options for retrieving referenced items.
     * @maxSize 100
     */
    referencedItemOptions?: SearchDataItemsRequestReferencedItemOptions[];
}
export interface Search extends SearchPagingMethodOneOf {
    /** Pointer to page of results using offset. Can't be used together with 'cursor_paging'. */
    paging?: Paging;
    /** Cursor pointing to page of results. Can't be used together with 'paging'. 'cursor_paging.cursor' can't be used together with 'filter' or 'sort'. */
    cursorPaging?: CursorPaging;
    /**
     * Filter object in the following format:
     *
     * `"filter" : {
     * "fieldName1": "value1",
     * "fieldName2":{"$operator":"value2"}
     * }`
     *
     * Examples of operators: `$eq`, `$ne`, `$lt`, `$lte`, `$gt`, `$gte`, `$in`, `$hasSome`, `$hasAll`, `$startsWith`, `$contains`
     *
     * **Note:** The values you provide for each field must adhere to that field's type. For example, when filtering by a field whose type is Date and Time, use an object in the following format: `"someDateAndTimeFieldKey": { "$date": "YYYY-MM-DDTHH:mm:ss.sssZ"}`. Learn more about [data types in Wix Data](https://dev.wix.com/docs/rest/business-solutions/cms/data-items/data-types-in-wix-data).
     */
    filter?: Record<string, any> | null;
    /**
     * Sort object in the following format:
     * `[{"fieldName":"sortField1","order":"ASC"},{"fieldName":"sortField2","order":"DESC"}]`
     * @maxSize 10
     */
    sort?: Sorting[];
    /**
     * Fields to return for each item. Only fields specified in the array are included in the response. If the array is empty, all fields are returned.
     * **Note:** The `_id` system field is always returned.
     * @maxLength 200
     * @maxSize 20
     */
    fields?: string[];
    /** Free text to match in searchable fields. */
    search?: SearchDetails;
}
/** @oneof */
export interface SearchPagingMethodOneOf {
    /** Pointer to page of results using offset. Can't be used together with 'cursor_paging'. */
    paging?: Paging;
    /** Cursor pointing to page of results. Can't be used together with 'paging'. 'cursor_paging.cursor' can't be used together with 'filter' or 'sort'. */
    cursorPaging?: CursorPaging;
}
export interface SearchDetails {
    /** Defines how separate search terms in `expression` are combined. */
    mode?: Mode;
    /**
     * Search term or expression.
     * @maxLength 100
     */
    expression?: string | null;
    /** Whether to use auto fuzzy search (allowing typos by a managed proximity algorithm). */
    fuzzy?: boolean;
}
export declare enum Mode {
    /** Any of the search terms must be present. */
    OR = "OR",
    /** All search terms must be present. */
    AND = "AND"
}
export interface SearchDataItemsRequestReferencedItemOptions {
    /**
     * Field containing references in the queried item.
     * @maxLength 1000
     */
    fieldName?: string;
    /**
     * Maximum number of referenced items to include for each queried item.
     * @max 1000
     */
    limit?: number | null;
}
export interface SearchDataItemsResponse {
    /**
     * Retrieved items.
     * @maxSize 1000
     */
    dataItems?: DataItem[];
    /** Paging information. */
    pagingMetadata?: PagingMetadataV2;
}
export interface AggregatePipelineDataItemsRequest extends AggregatePipelineDataItemsRequestPagingMethodOneOf {
    /**
     * Paging options to limit and skip the number of results.
     *
     * Learn more about [sorting and paging](https://dev.wix.com/docs/rest/articles/get-started/sorting-and-paging).
     */
    paging?: Paging;
    /**
     * Cursor token referring to a page of results.
     *
     * The token isn't used in the first request. Subsequent requests use the cursor token and not `filter` or `sort`.
     */
    cursorPaging?: CursorPaging;
    /**
     * Environment: `LIVE` or `SANDBOX`.
     * @internal
     */
    environment?: Environment;
    /**
     * ID of the collection to run the aggregation pipeline on.
     * @maxLength 256
     */
    dataCollectionId: string;
    /**
     * Sequence of aggregation operations to apply to the data.
     *
     * Stages are processed in order, with each stage operating on the output of the previous stage.
     * @maxSize 100
     */
    stages?: Stage[];
    /**
     * Whether to return the total result count when running a query with offset paging.
     *
     * When `true`, the `pagingMetadata` property in the response contains a `total` field.
     *
     * Learn more about [offset paging](https://dev.wix.com/docs/rest/articles/get-started/sorting-and-paging#paging).
     *
     * Default: `false`
     */
    returnTotalCount?: boolean;
    /**
     * Grid app ID. Optional in Live segment.
     * @internal
     * @format GUID
     */
    appId?: string | null;
    /**
     * Whether to read from the primary database for the most current data.
     *
     * This decreases performance but ensures data retrieved is up to date even immediately after an update.
     *
     * Learn more about [Wix Data and eventual consistency](https://dev.wix.com/api/rest/wix-data/wix-data/eventual-consistency).
     *
     * Default: `false`
     */
    consistentRead?: boolean;
    /**
     * Language to run the aggregation on, in [IETF BCP 47 language tag](https://en.wikipedia.org/wiki/IETF_language_tag) format.
     *
     * When provided, the aggregation runs on items in the specified language. When not provided, the aggregation runs on items in the default language.
     *
     * > **Note:** Translation for the specified language must be enabled for the collection in [Wix Multilingual](https://www.wix.com/app-market/wix-multilingual).
     *
     * Learn more about [Using Wix Multilingual to Translate CMS Content](https://support.wix.com/en/article/wix-multilingual-translating-cms-collection-content).
     * @format LANGUAGE_TAG
     */
    language?: string | null;
    /**
     * Additional parameters specific to the [Wix app collection](https://support.wix.com/en/article/cms-formerly-content-manager-working-with-wix-app-collections) you are querying.
     *
     * Learn more about [querying Wix app collections](https://dev.wix.com/docs/develop-websites/articles/wix-apps/wix-app-collections/querying-wix-app-collections).
     */
    appOptions?: Record<string, any> | null;
    /**
     * Options for the Publish plugin.
     *
     * This plugin allows items in a [data collection](https://dev.wix.com/docs/rest/business-solutions/cms/data-collections/data-collection-object) to be marked as draft or published. Published items are visible to site visitors, while draft items aren't.
     */
    publishPluginOptions?: DataPublishPluginOptions;
}
/** @oneof */
export interface AggregatePipelineDataItemsRequestPagingMethodOneOf {
    /**
     * Paging options to limit and skip the number of results.
     *
     * Learn more about [sorting and paging](https://dev.wix.com/docs/rest/articles/get-started/sorting-and-paging).
     */
    paging?: Paging;
    /**
     * Cursor token referring to a page of results.
     *
     * The token isn't used in the first request. Subsequent requests use the cursor token and not `filter` or `sort`.
     */
    cursorPaging?: CursorPaging;
}
export interface Expression extends ExpressionValueOneOf {
    /**
     * Path to the field that contains the value to use in the expression.
     *
     * Use dot notation to specify nested fields, such as `user.name` or `product.price`.
     * @maxLength 1000
     */
    fieldPath?: string;
    /**
     * Text value.
     * @maxLength 1000
     */
    text?: string;
    /** Numeric value. */
    numeric?: number;
    /** Adds the specified expressions together. */
    add?: AddOperation;
    /** Calculates the total sum of multiple expressions. */
    sum?: SumOperation;
    /** Subtracts 1 expression from another. */
    subtract?: SubtractOperation;
    /** Multiplies multiple expressions together. */
    multiply?: MultiplyOperation;
    /** Divides 1 expression by another. */
    divide?: DivideOperation;
    /** Finds the absolute value of an expression. */
    abs?: AbsOperation;
    /** Finds the remainder when dividing 1 expression by another. */
    mod?: ModOperation;
    /** Rounds an expression down to the nearest whole number. */
    floor?: FloorOperation;
    /** Rounds an expression up to the nearest whole number. */
    ceil?: CeilOperation;
    /** Joins multiple expressions together to create a new string. */
    concat?: ConcatOperation;
    /** Converts an expression into a string. */
    stringify?: StringifyOperation;
    /** Converts an expression into lowercase. */
    toLower?: ToLowerOperation;
    /** Converts an expression into uppercase. */
    toUpper?: ToUpperOperation;
    /** Extracts a portion of a string expression. */
    substring?: SubstringOperation;
    /** Finds the length of a string expression. */
    length?: LengthOperation;
}
/** @oneof */
export interface ExpressionValueOneOf {
    /**
     * Path to the field that contains the value to use in the expression.
     *
     * Use dot notation to specify nested fields, such as `user.name` or `product.price`.
     * @maxLength 1000
     */
    fieldPath?: string;
    /**
     * Text value.
     * @maxLength 1000
     */
    text?: string;
    /** Numeric value. */
    numeric?: number;
    /** Adds the specified expressions together. */
    add?: AddOperation;
    /** Calculates the total sum of multiple expressions. */
    sum?: SumOperation;
    /** Subtracts 1 expression from another. */
    subtract?: SubtractOperation;
    /** Multiplies multiple expressions together. */
    multiply?: MultiplyOperation;
    /** Divides 1 expression by another. */
    divide?: DivideOperation;
    /** Finds the absolute value of an expression. */
    abs?: AbsOperation;
    /** Finds the remainder when dividing 1 expression by another. */
    mod?: ModOperation;
    /** Rounds an expression down to the nearest whole number. */
    floor?: FloorOperation;
    /** Rounds an expression up to the nearest whole number. */
    ceil?: CeilOperation;
    /** Joins multiple expressions together to create a new string. */
    concat?: ConcatOperation;
    /** Converts an expression into a string. */
    stringify?: StringifyOperation;
    /** Converts an expression into lowercase. */
    toLower?: ToLowerOperation;
    /** Converts an expression into uppercase. */
    toUpper?: ToUpperOperation;
    /** Extracts a portion of a string expression. */
    substring?: SubstringOperation;
    /** Finds the length of a string expression. */
    length?: LengthOperation;
}
export interface AddOperation {
    /**
     * Expressions to add together.
     *
     * All expressions must resolve to numbers.
     * @maxSize 1000
     */
    expressions?: Expression[];
}
export interface SumOperation {
    /**
     * Expressions to calculate the total sum of.
     *
     * All expressions must resolve to numbers.
     * @maxSize 1000
     */
    expressions?: Expression[];
}
export interface SubtractOperation {
    /**
     * Expression to subtract `secondExpression` from.
     *
     * Expression must resolve to a number.
     */
    firstExpression?: Expression;
    /**
     * Expression to subtract from `firstExpression`.
     *
     * Expression must resolve to a number.
     */
    secondExpression?: Expression;
}
export interface MultiplyOperation {
    /**
     * Expressions to multiply.
     *
     * Expressions must resolve to numbers.
     * @maxSize 1000
     */
    expressions?: Expression[];
}
export interface DivideOperation {
    /**
     * Expression to divide by `secondExpression`.
     *
     * Expression must resolve to a number.
     */
    firstExpression?: Expression;
    /**
     * Expression to divide `firstExpression` by.
     *
     * Expression must resolve to a non-zero number.
     */
    secondExpression?: Expression;
}
export interface AbsOperation {
    /**
     * Expression to find the absolute value of.
     *
     * Expression must resolve to a number.
     */
    expression?: Expression;
}
export interface ModOperation {
    /**
     * Expression to divide by `secondExpression`.
     *
     * Expression must resolve to a number.
     */
    firstExpression?: Expression;
    /**
     * Expression to divide `firstExpression` by.
     *
     * Expression must resolve to a non-zero number.
     */
    secondExpression?: Expression;
}
export interface FloorOperation {
    /**
     * Expression to round down to the nearest whole number.
     *
     * Expression must resolve to a number.
     */
    expression?: Expression;
}
export interface CeilOperation {
    /**
     * Expression to round up to the nearest whole number.
     *
     * Expression must resolve to a number.
     */
    expression?: Expression;
}
export interface ConcatOperation {
    /**
     * Expressions to join together.
     *
     * Expressions must resolve to strings.
     * @maxSize 1000
     */
    expressions?: Expression[];
}
export interface StringifyOperation {
    /** Expression to convert into a string. */
    expression?: Expression;
}
export interface ToLowerOperation {
    /**
     * Expression to convert to lowercase.
     *
     * Expression must resolve to a string.
     */
    expression?: Expression;
}
export interface ToUpperOperation {
    /**
     * Expression to convert to uppercase.
     *
     * Expression must resolve to a string.
     */
    expression?: Expression;
}
export interface SubstringOperation {
    /**
     * Expression to extract a substring from.
     *
     * Expression must resolve to a string.
     */
    expression?: Expression;
    /**
     * Starting position of the substring to extract. Use zero-based indexing.
     *
     * Expression must resolve to a number.
     */
    startExpression?: Expression;
    /**
     * Number of characters to extract from the starting position.
     *
     * Expression must resolve to a number.
     */
    lengthExpression?: Expression;
}
export interface LengthOperation {
    /**
     * Expression to calculate the character count of.
     *
     * Expression must resolve to a string.
     */
    expression?: Expression;
}
export interface Avg {
    /**
     * Expression by which to calculate the group's average value.
     *
     * Expression must resolve to a number.
     */
    expression?: Expression;
}
export interface AccumulatorMin {
    /**
     * Expression by which to find the group's minimum value.
     *
     * Expression must resolve to a comparable value, such as a number or string.
     */
    expression?: Expression;
}
export interface AccumulatorMax {
    /**
     * Expression by which to find the group's maximum value.
     *
     * Expression must resolve to a comparable value, such as a number or string.
     */
    expression?: Expression;
}
export interface AccumulatorSum {
    /**
     * Expression by which to calculate the group's total sum.
     *
     * Expression must resolve to a number.
     */
    expression?: Expression;
}
export interface First {
    /** Expression by which to find the first item in the group. */
    expression?: Expression;
}
export interface Last {
    /** Expression by which to find the last item in the group. */
    expression?: Expression;
}
export interface Push {
    /** Expression by which to collect items into an array. */
    expression?: Expression;
}
export interface Include {
    /**
     * Key of the field to include in the result.
     *
     * Use dot notation to specify nested fields, such as `user.name` or `product.price`. Learn more about [field keys](https://support.wix.com/en/article/cms-formerly-content-manager-about-your-collection-fields#field-id-velo-by-wix-only).
     * @maxLength 1000
     */
    fieldName?: string;
}
export interface Exclude {
    /**
     * Key of the field to exclude from the result.
     *
     * Use dot notation to specify nested fields, such as `user.name` or `product.price`. Learn more about [field keys](https://support.wix.com/en/article/cms-formerly-content-manager-about-your-collection-fields#field-id-velo-by-wix-only).
     * @maxLength 1000
     */
    fieldName?: string;
}
export interface Reshape {
    /**
     * Key of the field to create in the result item.
     *
     * Learn more about [field keys](https://support.wix.com/en/article/cms-formerly-content-manager-about-your-collection-fields#field-id-velo-by-wix-only).
     * @maxLength 1000
     */
    resultFieldName?: string;
    /** Expression to resolve. The result of the expression is the value of the new field. */
    expression?: Expression;
}
export interface ProjectNested {
    /**
     * Key of the parent field for the nested fields.
     *
     * Learn more about [field keys](https://support.wix.com/en/article/cms-formerly-content-manager-about-your-collection-fields#field-id-velo-by-wix-only).
     * @maxLength 1000
     */
    resultFieldName?: string;
    /**
     * Nested fields to include, exclude, or calculate by running aggregations.
     * @maxSize 1000
     */
    fields?: Field[];
}
export interface Field extends FieldProjectionOneOf {
    /** When specified, includes only the specified field in the result. All other fields are excluded. */
    include?: Include;
    /** When specified, excludes the specified field from the result. All other fields are included. */
    exclude?: Exclude;
    /** Reshape a new field based on the specified expression. */
    reshape?: Reshape;
    /** Project nested fields by including, excluding, or reshaping new fields. */
    projectNested?: ProjectNested;
}
/** @oneof */
export interface FieldProjectionOneOf {
    /** When specified, includes only the specified field in the result. All other fields are excluded. */
    include?: Include;
    /** When specified, excludes the specified field from the result. All other fields are included. */
    exclude?: Exclude;
    /** Reshape a new field based on the specified expression. */
    reshape?: Reshape;
    /** Project nested fields by including, excluding, or reshaping new fields. */
    projectNested?: ProjectNested;
}
export interface GroupId {
    /**
     * Name of the field to group items by.
     *
     * This becomes the field name in the result's `_id` property.
     * @maxLength 1000
     */
    key?: string;
    /** Expression by which to determine the grouping value. Items whose expression resolves to the same value are grouped together in the result item's `_id` property. */
    expression?: Expression;
}
export interface Accumulator extends AccumulatorExpressionOneOf {
    /** Calculates the average value across all items in the group, based on the specified expression. */
    avg?: Avg;
    /** Finds the minimum value across all items in the group. */
    min?: AccumulatorMin;
    /** Finds the maximum value across all items in the group. */
    max?: AccumulatorMax;
    /** Calculates the sum of the specified expression across all items in the group. */
    sum?: AccumulatorSum;
    /** Finds the first item in the group. */
    first?: First;
    /** Finds the last item in the group. */
    last?: Last;
    /** Collects values from all items in the group into an array. */
    push?: Push;
    /**
     * Key of the field to create in the output item to contain the aggregation result.
     * @maxLength 1000
     */
    resultFieldName?: string;
}
/** @oneof */
export interface AccumulatorExpressionOneOf {
    /** Calculates the average value across all items in the group, based on the specified expression. */
    avg?: Avg;
    /** Finds the minimum value across all items in the group. */
    min?: AccumulatorMin;
    /** Finds the maximum value across all items in the group. */
    max?: AccumulatorMax;
    /** Calculates the sum of the specified expression across all items in the group. */
    sum?: AccumulatorSum;
    /** Finds the first item in the group. */
    first?: First;
    /** Finds the last item in the group. */
    last?: Last;
    /** Collects values from all items in the group into an array. */
    push?: Push;
}
export interface Group {
    /**
     * Grouping criteria by which to organize items.
     *
     * Each `Id` specifies a field by which to group items, and serves as the result item's unique `_id` property.
     *
     * Collection items with identical values for the specified `expression` are placed in the same group based on the specified `key`. If empty, all items are treated as a single group.
     * @maxSize 1000
     */
    groupIds?: GroupId[];
    /**
     * Accumulation operations to run on each group.
     *
     * Accumulators aggregate data across all items in the group and return the result in a new field.
     *
     * > **Note:** When using accumulators, the type of expression must match the operation type. For example, when using the `sum` accumulator, the specified expression must resolve to a number.
     * @maxSize 1000
     */
    accumulators?: Accumulator[];
}
export interface AggregatePipelineDataItemsRequestSorting {
    /**
     * Fields to sort the results by.
     * @maxSize 1000
     */
    values?: Sorting[];
}
/** Transform individual collection items by including, excluding, or calculating new fields based on aggregations. */
export interface Projection {
    /**
     * Nested fields to include, exclude, or calculate by running aggregations.
     * @maxSize 1000
     */
    fields?: Field[];
}
/** Convert an object into an array. */
export interface ObjectToArray {
    /**
     * Key of the field to convert into an array.
     *
     * Use dot notation to specify nested fields, such as `user.name` or `product.price`. Learn more about [field keys](https://support.wix.com/en/article/cms-formerly-content-manager-about-your-collection-fields#field-id-velo-by-wix-only).
     * @maxLength 1000
     */
    objectFieldName?: string;
    /**
     * Key of the new array to create in the result item.
     *
     * Learn more about [field keys](https://support.wix.com/en/article/cms-formerly-content-manager-about-your-collection-fields#field-id-velo-by-wix-only).
     * @maxLength 1000
     */
    destinationFieldName?: string;
}
/** Unwind an array. */
export interface UnwindArray {
    /**
     * Key of the array field to unwind.
     *
     * Use dot notation to specify a nested array, such as `user.products` or `product.price`. Learn more about [field keys](https://support.wix.com/en/article/cms-formerly-content-manager-about-your-collection-fields#field-id-velo-by-wix-only).
     * @maxLength 1000
     */
    arrayFieldName?: string;
}
export interface Stage extends StageStageOneOf {
    /**
     * Group.
     *
     * Groups aggregate data across multiple collection items and create new result items.
     */
    group?: Group;
    /**
     * Aggregation filter. Only collection items that match the filter are processed.
     *
     * Learn more about [filters in API Query Language](https://dev.wix.com/docs/rest/articles/get-started/api-query-language#filters).
     *
     * > **Note:** The values you provide for each filter field must adhere to that field's data type. For example, when filtering by a field whose type is Date and Time, use an object in the following format: `"someDateAndTimeFieldKey": { "$date": "YYYY-MM-DDTHH:mm:ss.sssZ"}`. Learn more about [data types in Wix Data](https://dev.wix.com/docs/rest/business-solutions/cms/data-items/data-types-in-wix-data).
     */
    filter?: Record<string, any> | null;
    /**
     * Sorting preferences.
     *
     * Learn more about [sorting and paging](https://dev.wix.com/docs/rest/articles/get-started/sorting-and-paging).
     */
    sort?: AggregatePipelineDataItemsRequestSorting;
    /** Transform collection items by including, excluding, or calculating new fields. */
    projection?: Projection;
    /** Convert an object into an array. Each property becomes an element in the new array. Each new array element also includes all other fields from the original object. */
    objectToArray?: ObjectToArray;
    /**
     * Deconstructs an array field into separate result items.
     *
     * Creates a new result object for each element in the specified array. Each new object contains the array element's value, as well as all other fields from the original element.
     */
    unwindArray?: UnwindArray;
    /** Number of results to skip from the beginning of the result set. */
    skip?: number;
    /** Maximum number of results to return. */
    limit?: number;
}
/** @oneof */
export interface StageStageOneOf {
    /**
     * Group.
     *
     * Groups aggregate data across multiple collection items and create new result items.
     */
    group?: Group;
    /**
     * Aggregation filter. Only collection items that match the filter are processed.
     *
     * Learn more about [filters in API Query Language](https://dev.wix.com/docs/rest/articles/get-started/api-query-language#filters).
     *
     * > **Note:** The values you provide for each filter field must adhere to that field's data type. For example, when filtering by a field whose type is Date and Time, use an object in the following format: `"someDateAndTimeFieldKey": { "$date": "YYYY-MM-DDTHH:mm:ss.sssZ"}`. Learn more about [data types in Wix Data](https://dev.wix.com/docs/rest/business-solutions/cms/data-items/data-types-in-wix-data).
     */
    filter?: Record<string, any> | null;
    /**
     * Sorting preferences.
     *
     * Learn more about [sorting and paging](https://dev.wix.com/docs/rest/articles/get-started/sorting-and-paging).
     */
    sort?: AggregatePipelineDataItemsRequestSorting;
    /** Transform collection items by including, excluding, or calculating new fields. */
    projection?: Projection;
    /** Convert an object into an array. Each property becomes an element in the new array. Each new array element also includes all other fields from the original object. */
    objectToArray?: ObjectToArray;
    /**
     * Deconstructs an array field into separate result items.
     *
     * Creates a new result object for each element in the specified array. Each new object contains the array element's value, as well as all other fields from the original element.
     */
    unwindArray?: UnwindArray;
    /** Number of results to skip from the beginning of the result set. */
    skip?: number;
    /** Maximum number of results to return. */
    limit?: number;
}
export interface AggregatePipelineDataItemsResponse {
    /**
     * Aggregation results.
     * @maxSize 10000
     */
    results?: Record<string, any>[] | null;
    /** Paging information. */
    pagingMetadata?: PagingMetadataV2;
}
//# sourceMappingURL=data-item-types.d.ts.map