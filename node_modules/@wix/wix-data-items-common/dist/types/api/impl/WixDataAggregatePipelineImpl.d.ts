import { WixDataAggregateOptions } from '../types';
import { WixDataResult } from '../WixDataResult';
import { PipelineStage } from '../stages/stages';
import { ApiClient } from '../ApiClient';
import { WixDataAggregatePipeline } from '../WixDataAggregatePipeline';
export declare class WixDataAggregatePipelineImpl implements WixDataAggregatePipeline {
    private collectionName;
    private pipeline;
    private client;
    private limitNumber?;
    private skipNumber?;
    private readonly ownInvalidArguments;
    constructor(collectionName: string, pipeline: PipelineStage[], client: ApiClient, limitNumber?: number | undefined, skipNumber?: number | undefined, invalidArguments?: string[]);
    get invalidArguments(): string[];
    run(options?: WixDataAggregateOptions): Promise<WixDataResult<Record<string, any>>>;
    limit(limitNumber: number): WixDataAggregatePipeline;
    skip(skipNumber: number): WixDataAggregatePipeline;
    private pipelineValidator;
    private copy;
}
//# sourceMappingURL=WixDataAggregatePipelineImpl.d.ts.map