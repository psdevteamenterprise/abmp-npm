import { Expression } from '../expressions/Expression';
import * as apiTypes from '../../types/data-item-types';
import { PipelineStage } from './stages';
/**
 * @builder
 */
export interface ProjectStage extends PipelineStage {
    /**
     * @internal
     */
    fields: apiTypes.Field[];
    include(...fieldNames: string[]): ProjectStage;
    exclude(...fieldNames: string[]): ProjectStage;
    reshape(expression: Expression, fieldName: string): ProjectStage;
    nested(stage: ProjectStage, fieldName: string): ProjectStage;
}
export declare class ProjectStageImpl implements ProjectStage {
    fields: apiTypes.Field[];
    include(...fieldNames: string[]): ProjectStage;
    exclude(...fieldNames: string[]): ProjectStage;
    reshape(expression: Expression, fieldName: string): ProjectStage;
    nested(stage: ProjectStage, fieldName: string): ProjectStage;
    private addField;
    private addNestedProjectionField;
    toProto(): apiTypes.Stage;
}
//# sourceMappingURL=ProjectStage.d.ts.map