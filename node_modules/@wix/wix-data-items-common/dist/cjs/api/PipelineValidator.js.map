{"version":3,"names":["_utils","require","_errors","PipelineValidator","AggregatingValidator","constructor","operatorName","previousInvalidArguments","_defineProperty2","default","_isNumber","specifier","operand","addValidation","isNumber","messages","queryValidations","isPositiveNumber","Number","isNaN","isNonNegativeNumber","exports"],"sources":["../../../src/api/PipelineValidator.ts"],"sourcesContent":["import { isNumber } from '../utils'\nimport { AggregatingValidator, messages } from '../errors'\n\nexport class PipelineValidator extends AggregatingValidator {\n  operatorName: string\n\n  constructor(operatorName: string, previousInvalidArguments: string[]) {\n    super(previousInvalidArguments)\n    this.operatorName = operatorName\n  }\n\n  _isNumber(specifier: string, operand: any) {\n    return this.addValidation(\n      () => isNumber(operand),\n      () =>\n        messages.queryValidations.isNumber(\n          this.operatorName,\n          specifier,\n          operand\n        )\n    )\n  }\n\n  isPositiveNumber(operand: number) {\n    return this._isNumber('positive', operand).addValidation(\n      () => !Number.isNaN(operand) && operand > 0,\n      () =>\n        messages.queryValidations.isPositiveNumber(this.operatorName, operand)\n    )\n  }\n\n  isNonNegativeNumber(operand: number) {\n    return this._isNumber('non-negative', operand).addValidation(\n      () => !Number.isNaN(operand) && operand >= 0,\n      () =>\n        messages.queryValidations.isNonNegativeNumber(\n          this.operatorName,\n          operand\n        )\n    )\n  }\n}\n"],"mappings":";;;;;;AAAA,IAAAA,MAAA,GAAAC,OAAA;AACA,IAAAC,OAAA,GAAAD,OAAA;AAEO,MAAME,iBAAiB,SAASC,4BAAoB,CAAC;EAG1DC,WAAWA,CAACC,YAAoB,EAAEC,wBAAkC,EAAE;IACpE,KAAK,CAACA,wBAAwB,CAAC;IAAA,IAAAC,gBAAA,CAAAC,OAAA;IAC/B,IAAI,CAACH,YAAY,GAAGA,YAAY;EAClC;EAEAI,SAASA,CAACC,SAAiB,EAAEC,OAAY,EAAE;IACzC,OAAO,IAAI,CAACC,aAAa,CACvB,MAAM,IAAAC,eAAQ,EAACF,OAAO,CAAC,EACvB,MACEG,gBAAQ,CAACC,gBAAgB,CAACF,QAAQ,CAChC,IAAI,CAACR,YAAY,EACjBK,SAAS,EACTC,OACF,CACJ,CAAC;EACH;EAEAK,gBAAgBA,CAACL,OAAe,EAAE;IAChC,OAAO,IAAI,CAACF,SAAS,CAAC,UAAU,EAAEE,OAAO,CAAC,CAACC,aAAa,CACtD,MAAM,CAACK,MAAM,CAACC,KAAK,CAACP,OAAO,CAAC,IAAIA,OAAO,GAAG,CAAC,EAC3C,MACEG,gBAAQ,CAACC,gBAAgB,CAACC,gBAAgB,CAAC,IAAI,CAACX,YAAY,EAAEM,OAAO,CACzE,CAAC;EACH;EAEAQ,mBAAmBA,CAACR,OAAe,EAAE;IACnC,OAAO,IAAI,CAACF,SAAS,CAAC,cAAc,EAAEE,OAAO,CAAC,CAACC,aAAa,CAC1D,MAAM,CAACK,MAAM,CAACC,KAAK,CAACP,OAAO,CAAC,IAAIA,OAAO,IAAI,CAAC,EAC5C,MACEG,gBAAQ,CAACC,gBAAgB,CAACI,mBAAmB,CAC3C,IAAI,CAACd,YAAY,EACjBM,OACF,CACJ,CAAC;EACH;AACF;AAACS,OAAA,CAAAlB,iBAAA,GAAAA,iBAAA","ignoreList":[]}