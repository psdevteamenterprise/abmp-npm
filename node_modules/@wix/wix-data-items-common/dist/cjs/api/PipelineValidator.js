"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
exports.__esModule = true;
exports.PipelineValidator = void 0;
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _utils = require("../utils");
var _errors = require("../errors");
class PipelineValidator extends _errors.AggregatingValidator {
  constructor(operatorName, previousInvalidArguments) {
    super(previousInvalidArguments);
    (0, _defineProperty2.default)(this, "operatorName", void 0);
    this.operatorName = operatorName;
  }
  _isNumber(specifier, operand) {
    return this.addValidation(() => (0, _utils.isNumber)(operand), () => _errors.messages.queryValidations.isNumber(this.operatorName, specifier, operand));
  }
  isPositiveNumber(operand) {
    return this._isNumber('positive', operand).addValidation(() => !Number.isNaN(operand) && operand > 0, () => _errors.messages.queryValidations.isPositiveNumber(this.operatorName, operand));
  }
  isNonNegativeNumber(operand) {
    return this._isNumber('non-negative', operand).addValidation(() => !Number.isNaN(operand) && operand >= 0, () => _errors.messages.queryValidations.isNonNegativeNumber(this.operatorName, operand));
  }
}
exports.PipelineValidator = PipelineValidator;
//# sourceMappingURL=PipelineValidator.js.map