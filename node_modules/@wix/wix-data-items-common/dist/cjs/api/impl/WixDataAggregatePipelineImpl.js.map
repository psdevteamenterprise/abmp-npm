{"version":3,"names":["_WixDataResultImpl","require","_PipelineValidator","WixDataAggregatePipelineImpl","constructor","collectionName","pipeline","client","limitNumber","skipNumber","invalidArguments","_defineProperty2","default","ownInvalidArguments","run","options","_response$pagingMetad","_response$results","length","Error","join","stages","map","stage","toProto","response","aggregatePipelineDataItems","dataCollectionId","paging","offset","limit","fetch","cursorOrOffset","returnTotalCount","request","cursorPaging","cursor","undefined","results","pagingMetadata","WixDataResultImpl","count","pipelineValidator","arityIsOne","arguments","isPositiveNumber","validateAndAggregate","copy","skip","isNonNegativeNumber","operatorName","PipelineValidator","params","exports"],"sources":["../../../../src/api/impl/WixDataAggregatePipelineImpl.ts"],"sourcesContent":["import { WixDataAggregateOptions } from '../types'\nimport { WixDataResult } from '../WixDataResult'\nimport { WixDataResultImpl, PageFetcher } from './WixDataResultImpl'\nimport { PipelineStage } from '../stages/stages'\nimport { ApiClient } from '../ApiClient'\nimport * as apiTypes from '../../types/data-item-types'\nimport { WixDataAggregatePipeline } from '../WixDataAggregatePipeline'\nimport { PipelineValidator } from '../PipelineValidator'\n\nexport class WixDataAggregatePipelineImpl implements WixDataAggregatePipeline {\n  private readonly ownInvalidArguments: string[]\n\n  constructor(\n    private collectionName: string,\n    private pipeline: PipelineStage[],\n    private client: ApiClient,\n    private limitNumber?: number,\n    private skipNumber?: number,\n    invalidArguments?: string[]\n  ) {\n    this.ownInvalidArguments = invalidArguments ?? []\n  }\n\n  get invalidArguments(): string[] {\n    return this.ownInvalidArguments\n  }\n\n  async run(\n    options?: WixDataAggregateOptions\n  ): Promise<WixDataResult<Record<string, any>>> {\n    if (this.invalidArguments.length > 0) {\n      throw new Error(this.invalidArguments.join(', '))\n    }\n\n    const stages: apiTypes.Stage[] = this.pipeline.map((stage) =>\n      stage.toProto()\n    )\n\n    const response = await this.client.aggregatePipelineDataItems({\n      dataCollectionId: this.collectionName,\n      stages,\n      ...options,\n      paging: { offset: this.skipNumber, limit: this.limitNumber },\n    })\n\n    const fetch: PageFetcher<Record<string, any>> = async (\n      cursorOrOffset: string | number,\n      returnTotalCount?: boolean\n    ): Promise<[Record<string, any>[], apiTypes.PagingMetadataV2]> => {\n      const request: apiTypes.AggregatePipelineDataItemsRequest = {\n        dataCollectionId: this.collectionName,\n        stages,\n        ...options,\n      }\n\n      if (typeof cursorOrOffset === 'string') {\n        request.cursorPaging = {\n          limit: this.limitNumber,\n          cursor: cursorOrOffset,\n        }\n        // Stages must not be sent if using cursor paging, as they'll be reused from original request\n        request.stages = undefined\n      } else {\n        request.paging = { limit: this.limitNumber, offset: cursorOrOffset }\n      }\n\n      if (returnTotalCount) {\n        request.returnTotalCount = true\n      }\n\n      const { results, pagingMetadata } =\n        await this.client.aggregatePipelineDataItems(request)\n      return [results!, pagingMetadata!]\n    }\n\n    return new WixDataResultImpl(\n      response.results || [],\n      response.pagingMetadata || { count: 0, offset: 0 },\n      fetch,\n      {\n        collectionName: this.collectionName,\n        skipNumber: response.pagingMetadata?.offset || 0,\n        limitNumber: response.results?.length,\n      }\n    )\n  }\n\n  limit(limitNumber: number): WixDataAggregatePipeline {\n    const [invalidArguments] = this.pipelineValidator('.limit')\n      .arityIsOne(arguments)\n      .isPositiveNumber(limitNumber)\n      .validateAndAggregate()\n\n    return this.copy({ limitNumber, invalidArguments })\n  }\n\n  skip(skipNumber: number): WixDataAggregatePipeline {\n    const [invalidArguments] = this.pipelineValidator('.skip')\n      .arityIsOne(arguments)\n      .isNonNegativeNumber(skipNumber)\n      .validateAndAggregate()\n\n    return this.copy({ skipNumber, invalidArguments })\n  }\n\n  private pipelineValidator(operatorName: string) {\n    return new PipelineValidator(operatorName, this.ownInvalidArguments)\n  }\n\n  private copy(params: {\n    limitNumber?: number\n    skipNumber?: number\n    invalidArguments?: string[]\n  }): WixDataAggregatePipelineImpl {\n    return new WixDataAggregatePipelineImpl(\n      this.collectionName,\n      this.pipeline,\n      this.client,\n      params.limitNumber ?? this.limitNumber,\n      params.skipNumber ?? this.skipNumber,\n      params.invalidArguments ?? this.ownInvalidArguments\n    )\n  }\n}\n"],"mappings":";;;;;;AAEA,IAAAA,kBAAA,GAAAC,OAAA;AAKA,IAAAC,kBAAA,GAAAD,OAAA;AAEO,MAAME,4BAA4B,CAAqC;EAG5EC,WAAWA,CACDC,cAAsB,EACtBC,QAAyB,EACzBC,MAAiB,EACjBC,WAAoB,EACpBC,UAAmB,EAC3BC,gBAA2B,EAC3B;IAAA,KANQL,cAAsB,GAAtBA,cAAsB;IAAA,KACtBC,QAAyB,GAAzBA,QAAyB;IAAA,KACzBC,MAAiB,GAAjBA,MAAiB;IAAA,KACjBC,WAAoB,GAApBA,WAAoB;IAAA,KACpBC,UAAmB,GAAnBA,UAAmB;IAAA,IAAAE,gBAAA,CAAAC,OAAA;IAG3B,IAAI,CAACC,mBAAmB,GAAGH,gBAAgB,IAAI,EAAE;EACnD;EAEA,IAAIA,gBAAgBA,CAAA,EAAa;IAC/B,OAAO,IAAI,CAACG,mBAAmB;EACjC;EAEA,MAAMC,GAAGA,CACPC,OAAiC,EACY;IAAA,IAAAC,qBAAA,EAAAC,iBAAA;IAC7C,IAAI,IAAI,CAACP,gBAAgB,CAACQ,MAAM,GAAG,CAAC,EAAE;MACpC,MAAM,IAAIC,KAAK,CAAC,IAAI,CAACT,gBAAgB,CAACU,IAAI,CAAC,IAAI,CAAC,CAAC;IACnD;IAEA,MAAMC,MAAwB,GAAG,IAAI,CAACf,QAAQ,CAACgB,GAAG,CAAEC,KAAK,IACvDA,KAAK,CAACC,OAAO,CAAC,CAChB,CAAC;IAED,MAAMC,QAAQ,GAAG,MAAM,IAAI,CAAClB,MAAM,CAACmB,0BAA0B,CAAC;MAC5DC,gBAAgB,EAAE,IAAI,CAACtB,cAAc;MACrCgB,MAAM;MACN,GAAGN,OAAO;MACVa,MAAM,EAAE;QAAEC,MAAM,EAAE,IAAI,CAACpB,UAAU;QAAEqB,KAAK,EAAE,IAAI,CAACtB;MAAY;IAC7D,CAAC,CAAC;IAEF,MAAMuB,KAAuC,GAAG,MAAAA,CAC9CC,cAA+B,EAC/BC,gBAA0B,KACsC;MAChE,MAAMC,OAAmD,GAAG;QAC1DP,gBAAgB,EAAE,IAAI,CAACtB,cAAc;QACrCgB,MAAM;QACN,GAAGN;MACL,CAAC;MAED,IAAI,OAAOiB,cAAc,KAAK,QAAQ,EAAE;QACtCE,OAAO,CAACC,YAAY,GAAG;UACrBL,KAAK,EAAE,IAAI,CAACtB,WAAW;UACvB4B,MAAM,EAAEJ;QACV,CAAC;QACD;QACAE,OAAO,CAACb,MAAM,GAAGgB,SAAS;MAC5B,CAAC,MAAM;QACLH,OAAO,CAACN,MAAM,GAAG;UAAEE,KAAK,EAAE,IAAI,CAACtB,WAAW;UAAEqB,MAAM,EAAEG;QAAe,CAAC;MACtE;MAEA,IAAIC,gBAAgB,EAAE;QACpBC,OAAO,CAACD,gBAAgB,GAAG,IAAI;MACjC;MAEA,MAAM;QAAEK,OAAO;QAAEC;MAAe,CAAC,GAC/B,MAAM,IAAI,CAAChC,MAAM,CAACmB,0BAA0B,CAACQ,OAAO,CAAC;MACvD,OAAO,CAACI,OAAO,EAAGC,cAAc,CAAE;IACpC,CAAC;IAED,OAAO,IAAIC,oCAAiB,CAC1Bf,QAAQ,CAACa,OAAO,IAAI,EAAE,EACtBb,QAAQ,CAACc,cAAc,IAAI;MAAEE,KAAK,EAAE,CAAC;MAAEZ,MAAM,EAAE;IAAE,CAAC,EAClDE,KAAK,EACL;MACE1B,cAAc,EAAE,IAAI,CAACA,cAAc;MACnCI,UAAU,EAAE,EAAAO,qBAAA,GAAAS,QAAQ,CAACc,cAAc,qBAAvBvB,qBAAA,CAAyBa,MAAM,KAAI,CAAC;MAChDrB,WAAW,GAAAS,iBAAA,GAAEQ,QAAQ,CAACa,OAAO,qBAAhBrB,iBAAA,CAAkBC;IACjC,CACF,CAAC;EACH;EAEAY,KAAKA,CAACtB,WAAmB,EAA4B;IACnD,MAAM,CAACE,gBAAgB,CAAC,GAAG,IAAI,CAACgC,iBAAiB,CAAC,QAAQ,CAAC,CACxDC,UAAU,CAACC,SAAS,CAAC,CACrBC,gBAAgB,CAACrC,WAAW,CAAC,CAC7BsC,oBAAoB,CAAC,CAAC;IAEzB,OAAO,IAAI,CAACC,IAAI,CAAC;MAAEvC,WAAW;MAAEE;IAAiB,CAAC,CAAC;EACrD;EAEAsC,IAAIA,CAACvC,UAAkB,EAA4B;IACjD,MAAM,CAACC,gBAAgB,CAAC,GAAG,IAAI,CAACgC,iBAAiB,CAAC,OAAO,CAAC,CACvDC,UAAU,CAACC,SAAS,CAAC,CACrBK,mBAAmB,CAACxC,UAAU,CAAC,CAC/BqC,oBAAoB,CAAC,CAAC;IAEzB,OAAO,IAAI,CAACC,IAAI,CAAC;MAAEtC,UAAU;MAAEC;IAAiB,CAAC,CAAC;EACpD;EAEQgC,iBAAiBA,CAACQ,YAAoB,EAAE;IAC9C,OAAO,IAAIC,oCAAiB,CAACD,YAAY,EAAE,IAAI,CAACrC,mBAAmB,CAAC;EACtE;EAEQkC,IAAIA,CAACK,MAIZ,EAAgC;IAC/B,OAAO,IAAIjD,4BAA4B,CACrC,IAAI,CAACE,cAAc,EACnB,IAAI,CAACC,QAAQ,EACb,IAAI,CAACC,MAAM,EACX6C,MAAM,CAAC5C,WAAW,IAAI,IAAI,CAACA,WAAW,EACtC4C,MAAM,CAAC3C,UAAU,IAAI,IAAI,CAACA,UAAU,EACpC2C,MAAM,CAAC1C,gBAAgB,IAAI,IAAI,CAACG,mBAClC,CAAC;EACH;AACF;AAACwC,OAAA,CAAAlD,4BAAA,GAAAA,4BAAA","ignoreList":[]}