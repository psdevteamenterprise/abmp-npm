{"version":3,"names":["FieldExpressionImpl","constructor","fieldPath","toProto","exports","TextExpressionImpl","value","text","NumericExpressionImpl","numeric","AddExpressionImpl","expressions","add","map","e","SubtractExpressionImpl","firstExpression","secondExpression","subtract","MultiplyExpressionImpl","multiply","DivideExpressionImpl","divide","SumExpressionImpl","sum","AbsExpressionImpl","expression","abs","ModExpressionImpl","mod","FloorExpressionImpl","floor","CeilExpressionImpl","ceil","ConcatExpressionImpl","concat","StringifyExpressionImpl","stringify","ToLowerExpressionImpl","toLower","ToUpperExpressionImpl","toUpper","SubstringExpressionImpl","startExpression","lengthExpression","proto","substring","LengthExpressionImpl","length"],"sources":["../../../../src/api/expressions/Expression.ts"],"sourcesContent":["import * as apiTypes from '../../types/data-item-types'\n\nexport interface Expression {\n  /**\n   * @internal\n   */\n  toProto(): apiTypes.Expression\n}\n\n/**\n * @builder\n */\nexport interface FieldExpression extends Expression {}\n\nexport class FieldExpressionImpl implements FieldExpression {\n  constructor(private fieldPath: string) {}\n  toProto(): apiTypes.Expression {\n    return { fieldPath: this.fieldPath }\n  }\n}\n\n/**\n * @builder\n */\nexport interface TextExpression extends Expression {}\n\nexport class TextExpressionImpl implements TextExpression {\n  constructor(private value: string) {}\n  toProto(): apiTypes.Expression {\n    return { text: this.value }\n  }\n}\n\n/**\n * @builder\n */\nexport interface NumericExpression extends Expression {}\n\nexport class NumericExpressionImpl implements NumericExpression {\n  constructor(private value: number) {}\n  toProto(): apiTypes.Expression {\n    return { numeric: this.value }\n  }\n}\n\n/**\n * @builder\n */\nexport interface AddExpression extends Expression {}\n\nexport class AddExpressionImpl implements AddExpression {\n  constructor(private expressions: Expression[]) {}\n  toProto(): apiTypes.Expression {\n    return {\n      add: {\n        expressions: this.expressions.map((e) => e.toProto()),\n      },\n    }\n  }\n}\n\n/**\n * @builder\n */\nexport interface SubtractExpression extends Expression {}\n\nexport class SubtractExpressionImpl implements SubtractExpression {\n  constructor(\n    private firstExpression: Expression,\n    private secondExpression: Expression\n  ) {}\n  toProto(): apiTypes.Expression {\n    return {\n      subtract: {\n        firstExpression: this.firstExpression.toProto(),\n        secondExpression: this.secondExpression.toProto(),\n      },\n    }\n  }\n}\n\n/**\n * @builder\n */\nexport interface MultiplyExpression extends Expression {}\n\nexport class MultiplyExpressionImpl implements MultiplyExpression {\n  constructor(private expressions: Expression[]) {}\n  toProto(): apiTypes.Expression {\n    return {\n      multiply: {\n        expressions: this.expressions.map((e) => e.toProto()),\n      },\n    }\n  }\n}\n\n/**\n * @builder\n */\nexport interface DivideExpression extends Expression {}\n\nexport class DivideExpressionImpl implements DivideExpression {\n  constructor(\n    private firstExpression: Expression,\n    private secondExpression: Expression\n  ) {}\n  toProto(): apiTypes.Expression {\n    return {\n      divide: {\n        firstExpression: this.firstExpression.toProto(),\n        secondExpression: this.secondExpression.toProto(),\n      },\n    }\n  }\n}\n\n/**\n * @builder\n */\nexport interface SumExpression extends Expression {}\n\nexport class SumExpressionImpl implements SumExpression {\n  constructor(private expressions: Expression[]) {}\n  toProto(): apiTypes.Expression {\n    return {\n      sum: {\n        expressions: this.expressions.map((e) => e.toProto()),\n      },\n    }\n  }\n}\n\n/**\n * @builder\n */\nexport interface AbsExpression extends Expression {}\n\nexport class AbsExpressionImpl implements AbsExpression {\n  constructor(private expression: Expression) {}\n  toProto(): apiTypes.Expression {\n    return {\n      abs: {\n        expression: this.expression.toProto(),\n      },\n    }\n  }\n}\n\n/**\n * @builder\n */\nexport interface ModExpression extends Expression {}\n\nexport class ModExpressionImpl implements ModExpression {\n  constructor(\n    private firstExpression: Expression,\n    private secondExpression: Expression\n  ) {}\n  toProto(): apiTypes.Expression {\n    return {\n      mod: {\n        firstExpression: this.firstExpression.toProto(),\n        secondExpression: this.secondExpression.toProto(),\n      },\n    }\n  }\n}\n\n/**\n * @builder\n */\nexport interface FloorExpression extends Expression {}\n\nexport class FloorExpressionImpl implements FloorExpression {\n  constructor(private expression: Expression) {}\n  toProto(): apiTypes.Expression {\n    return {\n      floor: {\n        expression: this.expression.toProto(),\n      },\n    }\n  }\n}\n\n/**\n * @builder\n */\nexport interface CeilExpression extends Expression {}\n\nexport class CeilExpressionImpl implements CeilExpression {\n  constructor(private expression: Expression) {}\n  toProto(): apiTypes.Expression {\n    return {\n      ceil: {\n        expression: this.expression.toProto(),\n      },\n    }\n  }\n}\n\n/**\n * @builder\n */\nexport interface ConcatExpression extends Expression {}\n\nexport class ConcatExpressionImpl implements ConcatExpression {\n  constructor(private expressions: Expression[]) {}\n  toProto(): apiTypes.Expression {\n    return {\n      concat: {\n        expressions: this.expressions.map((e) => e.toProto()),\n      },\n    }\n  }\n}\n\n/**\n * @builder\n */\nexport interface StringifyExpression extends Expression {}\n\nexport class StringifyExpressionImpl implements StringifyExpression {\n  constructor(private expression: Expression) {}\n  toProto(): apiTypes.Expression {\n    return {\n      stringify: {\n        expression: this.expression.toProto(),\n      },\n    }\n  }\n}\n\n/**\n * @builder\n */\nexport interface ToLowerExpression extends Expression {}\n\nexport class ToLowerExpressionImpl implements ToLowerExpression {\n  constructor(private expression: Expression) {}\n  toProto(): apiTypes.Expression {\n    return {\n      toLower: {\n        expression: this.expression.toProto(),\n      },\n    }\n  }\n}\n\n/**\n * @builder\n */\nexport interface ToUpperExpression extends Expression {}\n\nexport class ToUpperExpressionImpl implements ToUpperExpression {\n  constructor(private expression: Expression) {}\n  toProto(): apiTypes.Expression {\n    return {\n      toUpper: {\n        expression: this.expression.toProto(),\n      },\n    }\n  }\n}\n\n/**\n * @builder\n */\nexport interface SubstringExpression extends Expression {}\n\nexport class SubstringExpressionImpl implements SubstringExpression {\n  constructor(\n    private expression: Expression,\n    private startExpression: Expression,\n    private lengthExpression?: Expression\n  ) {}\n  toProto(): apiTypes.Expression {\n    const proto: any = {\n      substring: {\n        expression: this.expression.toProto(),\n        startExpression: this.startExpression.toProto(),\n      },\n    }\n    if (this.lengthExpression) {\n      proto.substring.lengthExpression = this.lengthExpression.toProto()\n    }\n    return proto\n  }\n}\n\n/**\n * @builder\n */\nexport interface LengthExpression extends Expression {}\n\nexport class LengthExpressionImpl implements LengthExpression {\n  constructor(private expression: Expression) {}\n  toProto(): apiTypes.Expression {\n    return {\n      length: { expression: this.expression.toProto() },\n    }\n  }\n}\n"],"mappings":"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","ignoreList":[]}