"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
exports.__esModule = true;
exports.GroupStageImpl = void 0;
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _Expression = require("../expressions/Expression");
/**
 * @builder
 */

class GroupStageImpl {
  constructor() {
    (0, _defineProperty2.default)(this, "ids", []);
    (0, _defineProperty2.default)(this, "accumulators", []);
  }
  by(expression, key) {
    this.ids.push({
      expression,
      key
    });
    return this;
  }
  sum(expression, resultFieldName) {
    return this.addAccumulator(expression, 'sum', resultFieldName);
  }
  avg(expression, resultFieldName) {
    return this.addAccumulator(expression, 'avg', resultFieldName);
  }
  min(expression, resultFieldName) {
    return this.addAccumulator(expression, 'min', resultFieldName);
  }
  max(expression, resultFieldName) {
    return this.addAccumulator(expression, 'max', resultFieldName);
  }
  count(resultFieldName) {
    return this.addAccumulator(new _Expression.NumericExpressionImpl(1), 'sum', resultFieldName);
  }
  first(expression, resultFieldName) {
    return this.addAccumulator(expression, 'first', resultFieldName);
  }
  last(expression, resultFieldName) {
    return this.addAccumulator(expression, 'last', resultFieldName);
  }
  push(expression, resultFieldName) {
    return this.addAccumulator(expression, 'push', resultFieldName);
  }
  addAccumulator(expression, type, resultFieldName) {
    this.accumulators.push({
      type,
      expression,
      resultFieldName
    });
    return this;
  }
  toProto() {
    return {
      group: {
        groupIds: this.ids.map(id => ({
          expression: id.expression.toProto(),
          key: id.key
        })),
        accumulators: this.accumulators.map(accumulator => ({
          [accumulator.type]: {
            expression: accumulator.expression.toProto()
          },
          resultFieldName: accumulator.resultFieldName
        }))
      }
    };
  }
}
exports.GroupStageImpl = GroupStageImpl;
//# sourceMappingURL=GroupStage.js.map