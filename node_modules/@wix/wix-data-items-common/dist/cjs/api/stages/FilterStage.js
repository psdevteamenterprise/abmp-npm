"use strict";

exports.__esModule = true;
exports.FilterStageImpl = void 0;
var _QueryBase = require("../QueryBase");
/**
 * @builder
 * Filter stage for aggregate pipeline operations. This interface provides filtering capabilities
 * specifically designed for use within aggregate pipelines, typically used with `stages.filter()`
 * in pipeline arrays to refine data based on specified conditions.
 */

class FilterStageImpl extends _QueryBase.QueryBase {
  constructor(origin) {
    super({
      collectionName: (origin == null ? void 0 : origin.collectionName) || '',
      filterBuilder: origin == null ? void 0 : origin.filterBuilder
    });
  }
  copy(params) {
    return new FilterStageImpl({
      collectionName: this.collectionName,
      filterBuilder: params.filterBuilder || this.filterBuilder
    });
  }
  get invalidArguments() {
    return [];
  }
  toProto() {
    return {
      filter: this.filterBuilder.build()
    };
  }
}
exports.FilterStageImpl = FilterStageImpl;
//# sourceMappingURL=FilterStage.js.map